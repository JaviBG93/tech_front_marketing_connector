{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","archivos","setArchivos","insertarArchivos","a","f","FormData","index","length","append","axios","post","then","response","console","log","data","catch","error","className","type","name","multiple","accept","onChange","e","subirArchivos","target","files","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTA0CeA,MApCf,WAEE,MAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAMMC,EAAgB,uCAAG,8BAAAC,EAAA,sDAGvB,IAFMC,EAAI,IAAIC,SAENC,EAAO,EAAGA,EAAMN,EAASO,OAAQD,IACvCF,EAAEI,OAAO,QAAQR,EAASM,IAJL,gBAQjBG,IAAMC,KAAK,kBAAkBN,GAClCO,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAASG,SACpBC,OAAM,SAAAC,GACPJ,QAAQC,IAAIG,MAZS,2CAAH,qDAgBtB,OACE,sBAAKC,UAAU,MAAf,UACE,uBACA,uBAAOC,KAAO,OAAOC,KAAK,QAAQC,UAAQ,EAACC,OAAO,OAAOC,SAAU,SAACC,GAAD,OAvBjD,SAAAA,GACpBvB,EAAYuB,GAsB8DC,CAAcD,EAAEE,OAAOC,UAC/F,uBACA,wBAAQT,UAAU,kBAAkBU,QAAS,kBAAI1B,KAAjD,mCCvBS2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4c22cccf.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\n\n\nfunction App() {\n\n  const [archivos,setArchivos]= useState(null);\n\n  const subirArchivos = e=>{\n    setArchivos(e);\n  }\n\n  const insertarArchivos = async()=>{\n    const f = new FormData()\n\n    for(let index =0; index<archivos.length; index++){\n      f.append(\"files\",archivos[index]);\n\n    }\n\n    await axios.post(\"/cm_upload_file\",f/*,{headers: {'content-type': 'multipart/form-data'}}*/)\n    .then(response=>{\n      console.log(response.data);\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <br></br>\n      <input type = \"file\" name=\"files\" multiple accept=\".csv\" onChange={(e)=>subirArchivos(e.target.files)}/>\n      <br></br>\n      <button className=\"btn btn-primary\" onClick={()=>insertarArchivos()}>Insertar archivos</button>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}